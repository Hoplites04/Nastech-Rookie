// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResourceServer.Database;

#nullable disable

namespace ResourceServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250428084847_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResourceServer.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneBrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneBrandId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest iPhone with A17 chip",
                            Name = "iPhone 16 Pro Max",
                            PhoneBrandId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest iPhone with A17 chip",
                            Name = "iPhone 16 Plus",
                            PhoneBrandId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest Xiaomi flagship",
                            Name = "Xiaomi Redmi Note 14 5G",
                            PhoneBrandId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest Xiaomi flagship",
                            Name = "Xiaomi Redmi Note 14 Pro Plus",
                            PhoneBrandId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest Xiaomi flagship",
                            Name = "Xiaomi Redmi Note 14 Pro",
                            PhoneBrandId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest Samsung flagship",
                            Name = "Samsung Galaxy S25 Ultra 5G 12GB",
                            PhoneBrandId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest Samsung flagship",
                            Name = "Samsung Galaxy S25 Plus 5G 12GB",
                            PhoneBrandId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest OnePlus flagship",
                            Name = "OnePlus 12 Pro",
                            PhoneBrandId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest OnePlus flagship",
                            Name = "OnePlus 12",
                            PhoneBrandId = 4
                        });
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnePlus"
                        });
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int>("PhoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("PhoneImages");
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("PhoneId")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("PhoneRatings");
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatteryCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatteryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bluetooth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brightness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactStorage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cores")
                        .HasColumnType("int");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalMemoryCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrameMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlassMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherConnections")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneId")
                        .HasColumnType("int");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ScreenResolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenTechnology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SimSlots")
                        .HasColumnType("int");

                    b.Property<string>("SimType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportedNetworks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarrantyPeriodMonths")
                        .HasColumnType("int");

                    b.Property<string>("WaterResistance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wifi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId")
                        .IsUnique();

                    b.ToTable("PhoneSpecification");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackMaterial = "Tempered glass",
                            BatteryCapacity = "5000 mAh",
                            BatteryType = "Lithium-ion",
                            Bluetooth = "Bluetooth 5.3",
                            Brightness = "2000 nits",
                            ContactStorage = "No limit",
                            Cores = 6,
                            Dimensions = "163 x 77.6 x 8.25 mm",
                            ExternalMemoryCard = "Not available",
                            FrameMaterial = "Titanium",
                            GlassMaterial = "Ceramic Shield",
                            Gps = "GPS, A-GPS, GLONASS, BDS, GALILEO",
                            Origin = "China",
                            OtherConnections = "NFC, Infrared, USB OTG",
                            PhoneId = 1,
                            Port = "1 Type C",
                            Processor = "Apple A18 Pro",
                            RAM = "8 GB",
                            RefreshRate = "120 Hz",
                            ReleaseDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScreenResolution = "2886 x 1320 Pixel",
                            ScreenSize = "6.9 inch",
                            ScreenStandard = "Super Retina XDR",
                            ScreenTechnology = "OLED",
                            SimSlots = 2,
                            SimType = "Nano SIM, eSIM",
                            SupportedNetworks = "5G, 4G, 3G, 2G",
                            WarrantyPeriodMonths = 24,
                            WaterResistance = "IP68",
                            Weight = "218g",
                            Wifi = "Wi-Fi 6"
                        },
                        new
                        {
                            Id = 2,
                            BackMaterial = "Tempered glass",
                            BatteryCapacity = "5000 mAh",
                            BatteryType = "Lithium-ion",
                            Bluetooth = "Bluetooth 5.3",
                            Brightness = "2000 nits",
                            ContactStorage = "No limit",
                            Cores = 6,
                            Dimensions = "163 x 77.6 x 8.25 mm",
                            ExternalMemoryCard = "Not available",
                            FrameMaterial = "Titanium",
                            GlassMaterial = "Ceramic Shield",
                            Gps = "GPS, A-GPS, GLONASS, BDS, GALILEO",
                            Origin = "China",
                            OtherConnections = "NFC, Infrared, USB OTG",
                            PhoneId = 2,
                            Port = "1 Type C",
                            Processor = "Apple A18 Pro",
                            RAM = "8 GB",
                            RefreshRate = "120 Hz",
                            ReleaseDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ScreenResolution = "2886 x 1320 Pixel",
                            ScreenSize = "6.9 inch",
                            ScreenStandard = "Super Retina XDR",
                            ScreenTechnology = "OLED",
                            SimSlots = 2,
                            SimType = "Nano SIM, eSIM",
                            SupportedNetworks = "5G, 4G, 3G, 2G",
                            WarrantyPeriodMonths = 24,
                            WaterResistance = "IP68",
                            Weight = "218g",
                            Wifi = "Wi-Fi 6"
                        });
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("PhoneVariants");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Color = "Titan Sa Mạc",
                            PhoneId = 1,
                            Price = 39990000m,
                            Storage = "256 GB"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Titan Sa Mạc",
                            PhoneId = 1,
                            Price = 41990000m,
                            Storage = "512 GB"
                        },
                        new
                        {
                            Id = 4,
                            Color = "Titan Sa Mạc",
                            PhoneId = 1,
                            Price = 43990000m,
                            Storage = "1 TB"
                        },
                        new
                        {
                            Id = 5,
                            Color = "Titan Tự Nhiên",
                            PhoneId = 1,
                            Price = 39990000m,
                            Storage = "256 GB"
                        },
                        new
                        {
                            Id = 6,
                            Color = "Titan Tự Nhiên",
                            PhoneId = 1,
                            Price = 41990000m,
                            Storage = "512 GB"
                        },
                        new
                        {
                            Id = 7,
                            Color = "Titan Tự Nhiên",
                            PhoneId = 1,
                            Price = 43990000m,
                            Storage = "1 TB"
                        },
                        new
                        {
                            Id = 8,
                            Color = "Titan Trắng",
                            PhoneId = 1,
                            Price = 39990000m,
                            Storage = "256 GB"
                        },
                        new
                        {
                            Id = 9,
                            Color = "Titan Trắng",
                            PhoneId = 1,
                            Price = 41990000m,
                            Storage = "512 GB"
                        },
                        new
                        {
                            Id = 10,
                            Color = "Titan Trắng",
                            PhoneId = 1,
                            Price = 43990000m,
                            Storage = "1 TB"
                        },
                        new
                        {
                            Id = 11,
                            Color = "Titan Đen",
                            PhoneId = 1,
                            Price = 39990000m,
                            Storage = "256 GB"
                        },
                        new
                        {
                            Id = 12,
                            Color = "Titan Đen",
                            PhoneId = 1,
                            Price = 41990000m,
                            Storage = "512 GB"
                        },
                        new
                        {
                            Id = 13,
                            Color = "Titan Đen",
                            PhoneId = 1,
                            Price = 43990000m,
                            Storage = "1 TB"
                        });
                });

            modelBuilder.Entity("ResourceServer.Models.Phone", b =>
                {
                    b.HasOne("ResourceServer.Models.PhoneBrand", "PhoneBrand")
                        .WithMany("Phones")
                        .HasForeignKey("PhoneBrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhoneBrand");
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneImage", b =>
                {
                    b.HasOne("ResourceServer.Models.Phone", "Phone")
                        .WithMany("Images")
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneRating", b =>
                {
                    b.HasOne("ResourceServer.Models.Phone", "Phone")
                        .WithMany("Ratings")
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneSpecification", b =>
                {
                    b.HasOne("ResourceServer.Models.Phone", "Phone")
                        .WithOne("Specification")
                        .HasForeignKey("ResourceServer.Models.PhoneSpecification", "PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneVariant", b =>
                {
                    b.HasOne("ResourceServer.Models.Phone", "Phone")
                        .WithMany("Variants")
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("ResourceServer.Models.Phone", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Ratings");

                    b.Navigation("Specification")
                        .IsRequired();

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ResourceServer.Models.PhoneBrand", b =>
                {
                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
